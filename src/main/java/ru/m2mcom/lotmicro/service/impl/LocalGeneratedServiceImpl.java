package ru.m2mcom.lotmicro.service.impl;

import ru.m2mcom.lotmicro.service.LocalGeneratedService;
import ru.m2mcom.lotmicro.domain.LocalGenerated;
import ru.m2mcom.lotmicro.repository.LocalGeneratedRepository;
import ru.m2mcom.lotmicro.repository.search.LocalGeneratedSearchRepository;
import ru.m2mcom.lotmicro.service.dto.LocalGeneratedDTO;
import ru.m2mcom.lotmicro.service.mapper.LocalGeneratedMapper;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.stereotype.Service;

import java.util.LinkedList;
import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.StreamSupport;

import static org.elasticsearch.index.query.QueryBuilders.*;

/**
 * Service Implementation for managing LocalGenerated.
 */
@Service
@Transactional
public class LocalGeneratedServiceImpl implements LocalGeneratedService{

    private final Logger log = LoggerFactory.getLogger(LocalGeneratedServiceImpl.class);
    
    private final LocalGeneratedRepository localGeneratedRepository;

    private final LocalGeneratedMapper localGeneratedMapper;

    private final LocalGeneratedSearchRepository localGeneratedSearchRepository;

    public LocalGeneratedServiceImpl(LocalGeneratedRepository localGeneratedRepository, LocalGeneratedMapper localGeneratedMapper, LocalGeneratedSearchRepository localGeneratedSearchRepository) {
        this.localGeneratedRepository = localGeneratedRepository;
        this.localGeneratedMapper = localGeneratedMapper;
        this.localGeneratedSearchRepository = localGeneratedSearchRepository;
    }

    /**
     * Save a localGenerated.
     *
     * @param localGeneratedDTO the entity to save
     * @return the persisted entity
     */
    @Override
    public LocalGeneratedDTO save(LocalGeneratedDTO localGeneratedDTO) {
        log.debug("Request to save LocalGenerated : {}", localGeneratedDTO);
        LocalGenerated localGenerated = localGeneratedMapper.localGeneratedDTOToLocalGenerated(localGeneratedDTO);
        localGenerated = localGeneratedRepository.save(localGenerated);
        LocalGeneratedDTO result = localGeneratedMapper.localGeneratedToLocalGeneratedDTO(localGenerated);
        localGeneratedSearchRepository.save(localGenerated);
        return result;
    }

    /**
     *  Get all the localGenerateds.
     *  
     *  @param pageable the pagination information
     *  @return the list of entities
     */
    @Override
    @Transactional(readOnly = true)
    public Page<LocalGeneratedDTO> findAll(Pageable pageable) {
        log.debug("Request to get all LocalGenerateds");
        Page<LocalGenerated> result = localGeneratedRepository.findAll(pageable);
        return result.map(localGenerated -> localGeneratedMapper.localGeneratedToLocalGeneratedDTO(localGenerated));
    }

    /**
     *  Get one localGenerated by id.
     *
     *  @param id the id of the entity
     *  @return the entity
     */
    @Override
    @Transactional(readOnly = true)
    public LocalGeneratedDTO findOne(Long id) {
        log.debug("Request to get LocalGenerated : {}", id);
        LocalGenerated localGenerated = localGeneratedRepository.findOne(id);
        LocalGeneratedDTO localGeneratedDTO = localGeneratedMapper.localGeneratedToLocalGeneratedDTO(localGenerated);
        return localGeneratedDTO;
    }

    /**
     *  Delete the  localGenerated by id.
     *
     *  @param id the id of the entity
     */
    @Override
    public void delete(Long id) {
        log.debug("Request to delete LocalGenerated : {}", id);
        localGeneratedRepository.delete(id);
        localGeneratedSearchRepository.delete(id);
    }

    /**
     * Search for the localGenerated corresponding to the query.
     *
     *  @param query the query of the search
     *  @param pageable the pagination information
     *  @return the list of entities
     */
    @Override
    @Transactional(readOnly = true)
    public Page<LocalGeneratedDTO> search(String query, Pageable pageable) {
        log.debug("Request to search for a page of LocalGenerateds for query {}", query);
        Page<LocalGenerated> result = localGeneratedSearchRepository.search(queryStringQuery(query), pageable);
        return result.map(localGenerated -> localGeneratedMapper.localGeneratedToLocalGeneratedDTO(localGenerated));
    }
}
